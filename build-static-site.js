import fs from 'fs'
import { execSync } from 'child_process'
import { parse } from 'node-html-parser'

// Ensure the dist directory exists and is empty
if (fs.existsSync('dist')) {
    fs.rmSync('dist', { recursive: true, force: true });
}
fs.mkdirSync('dist', { recursive: true });

// Find all Jupyter notebooks in the ./notebooks directory
const allIpynbFiles = execSync('find ./notebooks -name "*.ipynb"').toString().split('\n').filter(f => f.trim() !== '');
const notebooks = allIpynbFiles.filter(f => !f.includes('ipynb_checkpoints')).map(notebook => {
    return {
        path: notebook,
        name: notebook.substring(notebook.lastIndexOf('/') + 1).replace('.ipynb', ''),
        link: '/' + notebook.replace('./notebooks/', '').replace('.ipynb', '.html'),
        location: notebook.substring(0, notebook.lastIndexOf('/')).replace('./notebooks', '').substring(1)
    };
});

// Create the dist directory if it doesn't exist and export the notebooks as HTML
for (const notebook of notebooks) {
    execSync(`jupyter nbconvert --to html --output-dir=dist/${notebook.location} --execute ${notebook.path}`);
}

// Copy public assets to dist
fs.cpSync('public/assets', 'dist/assets', { recursive: true });

// Generate links for the sidebar
const navigation = notebooks.map(notebook => {
    return {
        name: notebook.name,
        link: notebook.link
    };
});
fs.writeFileSync('dist/assets/navigation.js', `// This file is auto-generated by the build script.
export default navigation = ${JSON.stringify(navigation)};
`);

// Update pages with the sidebar

const templateHtml = parse(fs.readFileSync('public/template.html', 'utf8'));
const templateContent = templateHtml.querySelector('body').innerHTML;

// Update HTML of notebooks to include the sidebar
for (const notebook of notebooks) {
    const notebookHtml = parse(fs.readFileSync(`dist/${notebook.link}`, 'utf8'));

    // Add all style from template to the notebook
    templateHtml.querySelectorAll('head link').forEach(link => {
        const notebookHead = notebookHtml.querySelector('head');
        notebookHead.appendChild(link.clone());
    });

    // Add the sidebar
    const notebookBodyHtml = notebookHtml.querySelector('body');
    const existingNotebookContent = notebookBodyHtml.querySelector('main').innerHTML;

    const newNotebookContent = parse(templateContent);
    newNotebookContent.querySelector('main').innerHTML = existingNotebookContent;

    notebookBodyHtml.innerHTML = newNotebookContent.innerHTML;

    fs.writeFileSync(`dist/${notebook.link}`, notebookHtml.toString());
}